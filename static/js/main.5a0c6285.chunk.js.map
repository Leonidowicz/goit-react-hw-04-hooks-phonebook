{"version":3,"sources":["Components/ContactForm.js","Components/Filter.js","Components/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","newContact","useState","name","setName","number","setNumber","onChange","target","value","console","log","onSubmit","e","preventDefault","alert","type","placeholder","pattern","title","required","Filter","filter","ContactList","filteredContacts","handleDelete","map","id","onClick","initialState","App","localStorage","getItem","setItem","JSON","stringify","parse","contacts","setContacts","setFilter","useEffect","contact","toLowerCase","includes","className","uuidv4","find","split","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a0c6285.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const ContactForm = ({ newContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    if (number === '') {\r\n      alert('phone number is required');\r\n      return;\r\n    }\r\n    newContact(contact);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const onChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        console.log('smt error');\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          value={name}\r\n          required\r\n          onChange={onChange}\r\n        />\r\n        Phone number\r\n        <input\r\n          type=\"tel\"\r\n          placeholder=\"Enter phone number\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n","export const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find phone number by name\r\n      <input name=\"filter\" type=\"text\" value={filter} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n","export const ContactList = ({ filteredContacts, handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button type=\"button\" onClick={handleDelete} id={`deletebtn:${id}`}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ContactForm } from './Components/ContactForm';\nimport { Filter } from './Components/Filter';\nimport { ContactList } from './Components/ContactList';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\nexport const App = () => {\n  const [contacts, setContacts] = useState(() => {\n    if (\n      !localStorage.getItem('contacts') ||\n      localStorage.getItem('contacts') === '[]'\n    ) {\n      localStorage.setItem('contacts', JSON.stringify(initialState));\n    }\n    return JSON.parse(localStorage.getItem('contacts'));\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const newContact = ({ name, number }) => {\n    const contact = { name, number, id: uuidv4() };\n\n    const foundContact = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    foundContact\n      ? alert(`${name} is already in contacts`)\n      : setContacts([...contacts, contact]);\n  };\n\n  const onChange = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const handleDelete = ({ target }) => {\n    const id = target.id.split(':')[1];\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className=\"App-header\">\n      <h1>Phonebook</h1>\n      <ContactForm newContact={newContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={onChange} />\n      <ContactList\n        filteredContacts={filteredContacts}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}